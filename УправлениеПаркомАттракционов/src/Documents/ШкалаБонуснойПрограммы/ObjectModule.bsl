// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	// регистр АктуальнаяШкалаБонуснойПрограммы
	Движения.АктуальнаяШкалаБонуснойПрограммы.Записывать = Истина;
	Движение = Движения.АктуальнаяШкалаБонуснойПрограммы.Добавить();
	Движение.Период = Дата;
	Движение.Шкала = Ссылка;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Диапозоны.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если Диапозоны[0].НижняяГраница <> 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нижняя граница первого диапозона должна быть равна 0";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = "Диапозоны[0].НижняяГраница";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ВерхняяГраницаПредыдущегоДиапозона = 0;
		
	Для Сч = 0 По Диапозоны.Количество() - 1 Цикл
		Диапозон = Диапозоны[Сч];
		Если Сч > 0 Тогда
			Если Диапозон.НижняяГраница <> ВерхняяГраницаПредыдущегоДиапозона Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Верняя граница диапозона должна быть равна нижней границе следущего";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Поле = СтрШаблон("Диапозоны[%1].НижняяГраница", XMLСтрока(Сч));
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
				
		Если Диапозон.НижняяГраница >= Диапозон.ВерхняяГраница 
		И Сч <> Диапозоны.Количество() - 1 Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Верняя граница диапозона должна быть больше нижней";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Поле = СтрШаблон("Диапозоны[%1].ВерхняяГраница", XMLСтрока(Сч));
				Сообщение.Сообщить();			
		КонецЕсли;
		
		ВерхняяГраницаПредыдущегоДиапозона = Диапозон.ВерхняяГраница;	
	КонецЦикла;
	
	ПоследнийДиапозон = Диапозоны[Диапозоны.Количество() - 1];
	Если ПоследнийДиапозон.ВерхняяГраница <> 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Верхняя граница первого диапозона должна быть равна 0!";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Поле = СтрШаблон("Диапозоны[%1].ВерхняяГраница", XMLСтрока(Диапозоны.Количество() - 1));
		Сообщение.Сообщить();
	КонецЕсли;
		
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
